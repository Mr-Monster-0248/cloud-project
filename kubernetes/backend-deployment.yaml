apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: E:\DEV\Efrei\M2\Cloud\cloud-project\kompose.exe convert
    kompose.service.type: LoadBalancer
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: backend
  name: backend
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: backend
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: E:\DEV\Efrei\M2\Cloud\cloud-project\kompose.exe convert
        kompose.service.type: LoadBalancer
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        io.kompose.network/db-network: "true"
        io.kompose.network/redis-network: "true"
        io.kompose.service: backend
    spec:
      containers:
        - args:
            - /bin/bash
            - -c
            - |
              npm run migration:run
              npm run start
          env:
            - name: DATABASE_HOST
              value: ps-database
            - name: DATABASE_NAME
              value: node_app_db
            - name: DATABASE_PASSWORD
              value: db_password
            - name: DATABASE_PORT
              value: "5432"
            - name: DATABASE_USERNAME
              value: db_user
            - name: LOG_FILE_NAME
              value: server.log
            - name: NODE_ENV
              value: production
            - name: PORT
              value: "7000"
            - name: REDIS_HOST
              value: redis
          image: mrmonster0248/node_app:v2
          name: backend
          ports:
            - containerPort: 7000
          resources: {}
      restartPolicy: Always
status: {}
